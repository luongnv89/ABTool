# $Id$

# $(TOP_PATH) should be already set when including this makefile

# Installation directories, as recommended by the GNU make manual
# usually generated by a ./configure, but hand-made modifications are
# enough

DESTDIR=
prefix=$(DESTDIR)/usr
exec_prefix=$(prefix)
bindir=$(exec_prefix)/Binary
#sbindir=$(exec_prefix)/sbin
#libexecdir=$(exec_prefix)/libexec
datarootdir=$(prefix)/share
texdir=$(datarootdir)/texmf-texlive/tex/latex/brillant
datadir=$(datarootdir)/ABTOOLS
datadir=$(datarootdir)/brillant
xsldir=$(datadir)/bxml/xsl
#sysconfdir=$(prefix)/etc
#sharedstatedir=$(prefix)/com
#localstatedir=$(prefix)/var
includedir=$(prefix)/include
oldincludedir=/usr/include
docdir=$(datarootdir)/doc/ABTOOLS
infodir=$(datarootdir)/info
htmldir=$(docdir)/html
dvidir=$(docdir)
pdfdir=$(docdir)
psdir=$(docdir)
libdir=$(exec_prefix)/lib/ABTOOLS
lispdir=$(datarootdir)/emacs/site-lisp
localedir=$(datarootdir)/locale
mandir=$(datarootdir)/man
manext=.1
srcdir=$(TOP_PATH)/src

# Excerpts from the GNU make manual, about conventions
# 
# Pre-installation and post-installation commands should not run any
# programs except for these:
# 
# [ basename bash cat chgrp chmod chown cmp cp dd diff echo
# egrep expand expr false fgrep find getopt grep gunzip gzip
# hostname install install-info kill ldconfig ln ls md5sum
# mkdir mkfifo mknod mv printenv pwd rm rmdir sed sort tee
# test touch true uname xargs yes

# Usable utilities in targets scripts
# cat cmp cp diff echo egrep expr false grep install-info
# ln ls mkdir mv pwd rm rmdir sed sleep sort tar test touch true
# Shell : SHELL=/bin/sh (check for bashisms)

INSTALL=install
INSTALL_PROGRAM=$(INSTALL)
INSTALL_DATA=$(INSTALL) -m 644

# Now variables used throughout the ABTools makefiles for building
# from the sources

# Date ISO format
DATEISO = $(shell date +"%Y-%m-%d")

MAJOR_REVISION = 0
MINOR_REVISION = 4
PATCHLEVEL = $(shell svnversion $(TOP_PATH))

VERSION = $(MAJOR_REVISION).$(MINOR_REVISION).$(PATCHLEVEL)-$(DATEISO)

define ANTLR_VERSION
$(shell 
  $(ANTLR) -h 2>&1 \
| $(GREP) Version \
| $(SED) -e 's/.*Version \([0-9.]\+\) (\(.*\)).*$$/\1-\2/'
)
endef

ARCHTYPE = $(shell uname -m)
OSTYPE = $(shell uname -s)

# Programs (with common options):
SHELL           = /bin/sh
RM              = rm -rf
MV              = mv -f
CD              = cd
CP              = cp
XARGS           = xargs
GREP            = grep
SED             = sed
FIND            = find

# A few handy functions for exploring the system

# $(call first-existing,list) yields the first existing file it finds
# in <list>
# Does not work with spaces in filenames
define first-existing
$(shell 
found=; for i in $(1); \
 do \
 if [ -f "$$i" ]; \
 then if [ x"$$found" = x ];\
 then found=$$i; fi; fi;\
 done; \
 echo $$found
)
endef

# $(call first-callable,list,alt) yields the first callable exec it
# finds in <list>. If none found, yields the alternative <alt>
# Does not work with spaces in filenames
define first-callable
$(shell 
found=; for i in $(1); \
 do \
 if [ `which "$$i"` ]; \
 then if [ x"$$found" = x ];\
 then found=$$i; fi; fi;\
 done; \
 if [ x"$$found" = x ];\
 then echo $(2);\
 else  echo $$found;\
 fi
)
endef

# Variables containing the software for producing everything
# You want most likely to change some of these

ANTLR_PATHS=\
 /usr/local/lib

ANTLR_PATH=$(call first-existing,$(addsuffix /antlr.jar,$(ANTLR_PATHS)))

ifeq ($(ANTLR_PATH),)
$(error Can not find antlr.jar !)
endif

ANTLRS=\
 runantlr \
 cantlr \
 antlr
ANTLR=$(call first-callable,$(ANTLRS),$(JAVA) -classpath $(ANTLR_PATH) antlr.Tool)

JAVA=java
JAVAC=javac
# A possible alternative, but incompatible with JAVACFLAGS:
# gcj command line arguments have a different syntax
# JAVAC          = gcj -C -O -c
GCJ=gcj
JAR=jar cvf
JARMANIFEST=jar cvfm
JAVADOC         = javadoc

JAVACFLAGS      = -Xlint -classpath .:$(ANTLR_PATH)
GCJFLAGS        = -O -c -I $(ANTLR_PATH)
JAVADOCFLAGS    = -version -author -d $(ABTOOLS_JAVADOC) -classpath $(ANTLR_PATH)

# Variables for local productions

ABTOOLSBINDIR	= $(TOP_PATH)/Binary
ABTOOLSONEJARDIR= $(ABTOOLSBINDIR)/one-jar-root

ONEJARJAR	= $(TOP_PATH)/Make/one-jar-boot-0.96.jar

ABTOOLS		= $(ABTOOLSBINDIR)/abtools.jar
ABTOOLS_NODEPS	= $(ABTOOLSBINDIR)/abtools-nodeps.jar
ABTOOLS_NATIVE	= $(ABTOOLSBINDIR)/abtools.bin
ABTOOLS_DOC	= $(TOP_PATH)/Documentation
ABTOOLS_JAVADOC	= $(ABTOOLS_DOC)/javadoc
ABTOOLS_GDOC	= $(ABTOOLS_DOC)/grammars

# $(call NEEDS_GCJ,text) will output text only if GCJ exists
define NEEDS_GCJ
$(shell \
  (if which $(GCJ) >/dev/null; then echo $(1); fi)
)
endef


# Not indicated here because set as a per-needed basis

# TOP_PATH: where the top of the abtools directory is, w.r.t to where
# we are currently

# Emacs variables
# 
# Local Variables:
# mode:makefile
# End:
